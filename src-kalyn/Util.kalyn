(import "Stdlib.kalyn")

(defn bytes8 (Func Int String)
  (v)
  [(Char v)])

(defn bytes16 (Func Int String)
  (v)
  [(Char      v   )
   (Char (shr v 8))])

(defn bytes32 (Func Int String)
  (v)
  [(Char      v    )
   (Char (shr v 8) )
   (Char (shr v 16))
   (Char (shr v 24))])

(defn bytes64 (Func Int String)
  (v)
  [(Char      v    )
   (Char (shr v 8) )
   (Char (shr v 16))
   (Char (shr v 24))
   (Char (shr v 32))
   (Char (shr v 40))
   (Char (shr v 48))
   (Char (shr v 56))])

(public defn fixedPoint (Func (Eq a) a (Func a a) a)
  "Compute the least fixed point of a function. Given an equality
   test, repeatedly apply the function to its argument until two
   successive values are the same, then return the first of them."
  (eq x f)
  (let ((fx (f x)))
    (if (eq x fx)
      x
      (fixedPoint eq fx f))))
