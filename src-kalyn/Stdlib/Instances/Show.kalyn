(import "../../Stdlib.kalyn")

(public defn showInt (Show Int)
  (i)
  (case (compareInt i 0)
    (LT (Cons '-' (showInt (- 0 i))))
    (EQ "0")
    (GT (let ((showInt*
               (lambda (i str)
                 (if (==Int i 0)
                   str
                   (showInt*
                     (/ i 10)
                     (Cons
                       (Char (+ 0x30 (% i 10)))
                       str))))))
          (showInt* i "")))))

(public defn showList (Func (Show a) (Show (List a)))
  (show elts)
  (concat
    ["["
     (intercalate ", " (map show elts))
     "]"]))

(public defn showPair (Func (Show a) (Show b) (Show (Pair a b)))
  (showA showB (Pair a b))
  (concat
    ["("
     (showA a)
     ", "
     (showB b)
     ")"]))

(public defn showBool (Show Bool)
  (bool)
  (if bool
    "True"
    "False"))

(public defn showMap (Func (Show k) (Show v) (Show (Map k v)))
  (showK showV)
  (comp (showList (showPair showK showV)) mapToList))

(public defn showSet (Func (Show a) (Show (Set a)))
  (show)
  (comp (showList show) setToList))

(public defn showMaybe (Func (Show a) (Show (Maybe a)))
  (show elt)
  (case elt
    (Nothing "Nothing")
    ((Just a) (append "Just " (show a)))))
