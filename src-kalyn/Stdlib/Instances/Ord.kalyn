(import "../../Stdlib.kalyn")

(public defn compareBool (Ord Bool)
  (x y)
  (case (Pair x y)
    ((Pair False True)
     LT)
    ((Pair True False)
     GT)
    (_ EQ)))

(public defn compareInt (Ord Int)
  (x y)
  (if (<Int x y)
    LT
    (if (>Int x y)
      GT
      EQ)))

(public defn compareList (Func (Ord a) (Ord (List a)))
  (compare s1 s2)
  (case (Pair s1 s2)
    ((Pair Null Null)
     EQ)
    ((Pair Null (Cons _ _))
     LT)
    ((Pair (Cons _ _) Null)
     GT)
    ((Pair (Cons f1 r1) (Cons f2 r2))
     (case (compare f1 f2)
       (LT LT)
       (GT GT)
       (EQ (compareList compare r1 r2))))))

(public defn compareChar (Ord Char)
  ((Char c1) (Char c2))
  (compareInt c1 c2))

(public def compareString (Ord String)
  (compareList compareChar))

(public defn comparePair (Func (Ord a) (Ord b) (Ord (Pair a b)))
  (cmpA cmpB (Pair a1 b1) (Pair a2 b2))
  (case (cmpA a1 a2)
    (EQ (cmpB b1 b2))
    (res res)))

(public defn compareTriplet (Func (Ord a) (Ord b) (Ord c) (Ord (Triplet a b c)))
  (cmpA cmpB cmpC (Triplet a1 b1 c1) (Triplet a2 b2 c2))
  (case (cmpA a1 a2)
    (EQ (case (cmpB b1 b2)
          (EQ (cmpC c1 c2))
          (res res)))
    (res res)))
