(data (List a)
  Null (Cons a (List a)))

(data Char (Char Int))

(data Bool False True)

(defn foldr (Func (Func a b b) b (List a) b)
  (func init elts)
  (case elts
    (Null init)
    ((Cons fst rst)
     (func fst (foldr func init rst)))))

(defn map (Func (Func a b) (List a) (List b))
  (func)
  (foldr (lambda (elt rst)
           (Cons (func elt) rst))
         Null))

(def encode (Func String String)
  (map (lambda (char)
         (case char
           ('\n'
            '\n')
           ((Char i)
            (Char (+ i 1)))))))

(public def main (IO Empty)
  (print (encode "Hello, world!\n")))
